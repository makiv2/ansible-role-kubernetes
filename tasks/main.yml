---
- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

# - include_tasks: setup-Debian.yml
#   when: ansible_os_family == 'Debian'

- name: Ensure dependencies are installed.
  package: 
    name:
      - curl
      - apt-transport-https
      - ca-certificates
      - python3-debian
      - make
      - python3-pip
      - python3-kubernetes
    state: present

- name: Add Kubernetes repository.
  deb822_repository:
    name: kubernetes
    types: deb
    uris: "{{ kubernetes_apt_repository }}"
    suites: /
    signed_by: "{{ kubernetes_apt_repository }}/Release.key"
  register: kubernetes_repository

- name: Update Apt cache.
  apt:
    update_cache: true
  when: kubernetes_repository.changed

- name: Install Kubernetes packages.
  package:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
  notify: restart kubelet
  loop: "{{ kubernetes_packages }}"

- name: Ensure kubelet is started and enabled at boot.
  service:
    name: kubelet
    state: started
    enabled: true

# Docker runtime pre-reqs
- include_tasks: docker-runtime-prep.yml
  when: kubernetes_cri == 'docker'

- name: Check if Kubernetes has already been initialized.
  stat:
    path: /etc/kubernetes/admin.conf
  register: kubernetes_init_stat

# Control plane setup
- include_tasks: control-plane-setup.yml
  when: kubernetes_role == 'control_plane'

# Install Helm
- include_tasks: install-helm.yml

# CNI setup
- include_tasks: cni-setup-cilium.yml
  when:
    - kubernetes_configure_cni == true
    - kubernetes_cni == 'cilium'

# Set up nodes.
- name: Get the kubeadm join command from the Kubernetes control plane.
  command: kubeadm token create --print-join-command
  changed_when: false
  when: kubernetes_role == 'control_plane'
  register: kubernetes_join_command_result

- name: Set the kubeadm join command globally.
  set_fact:
    kubernetes_join_command: >
      {{ kubernetes_join_command_result.stdout }}
      {{ kubernetes_join_command_extra_opts }}
  when: kubernetes_join_command_result.stdout is defined
  delegate_to: "{{ item }}"
  delegate_facts: true
  with_items: "{{ groups['all'] }}"

- include_tasks: node-setup.yml
  when: kubernetes_role == 'node'
