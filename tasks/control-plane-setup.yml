- name: Create the directory for the kubernetes_config_file
  file:
    path: "{{ kubernetes_kubeadm_kubelet_config_file_path | dirname }}"
    state: directory

- name: Deploy the config-file for kubeadm and kubelet
  template:
    src: "kubeadm-kubelet-kubeproxy-config.j2"
    dest: "{{ kubernetes_kubeadm_kubelet_config_file_path }}"

- name: Turn off swap
  command: swapoff -a

- name: Remove swap entry from /etc/fstab
  replace:
    path: /etc/fstab
    regexp: '^(\S+\s+\S+\s+swap\s+.*)$'
    replace: '# \1'
    backup: no

- name: Initialize Kubernetes control plane with kubeadm init
  command: >
    kubeadm init
    --config {{ kubernetes_kubeadm_kubelet_config_file_path }}
  register: kubeadmin_init
  when: (not kubernetes_init_stat.stat.exists)

- name: Print the init output to screen.
  debug:
    var: kubeadmin_init.stdout
    verbosity: 3
  when: not kubernetes_init_stat.stat.exists

- name: Ensure .kube directory exists.
  file:
    path: ~/.kube
    state: directory
    mode: 0755

- name: Symlink the kubectl admin.conf to ~/.kube/conf.
  file:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config
    state: link
    mode: 0644

- name: Get node taints
  command: kubectl get nodes -o json
  register: kubectl_nodes
  changed_when: false

- name: Remove control-plane taint if it exists and pods are allowed
  command: kubectl taint nodes --all node-role.kubernetes.io/control-plane-
  when:
    - kubernetes_allow_pods_on_control_plane | bool
    - "'node-role.kubernetes.io/control-plane' in taints"
  vars:
    taints: >-
      {{
        kubectl_nodes.stdout | from_json | json_query(
          "items[].spec.taints[].key"
        ) | list | unique
      }}